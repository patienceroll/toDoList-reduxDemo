{"version":3,"sources":["actionType/index.js","plugs/formatDate.js","action/index.js","page/ToDoList.jsx","reducer/reducer.js","index.js"],"names":["add","tuggleIsDone","saveToLocalStorage","sortToDoList","deleteItem","edit","formatDate","date","Date","year","getFullYear","month","getMonth","day","getDate","saveToLocal","type","sortList","confirm","Modal","ToDoList","store","this","props","list","getState","header","style","display","justifyContent","onClick","title","content","cancelText","okText","onOk","localStorage","clear","window","location","reload","bordered","dataSource","renderItem","item","Item","width","span","checkedChildren","unCheckedChildren","checked","isDone","onChange","detail","dispatch","forceUpdate","createTime","showDrawer","React","Component","toDoStore","state","action","map","setItem","JSON","stringify","filter","concat","editDetail","parse","getItem","createStore","Header","height","backgroundColor","src","marginTop","marginLeft","alt","lineHight","fontSize","color","verticalAlign","position","top","right","App","visiable","isAdd","value","listValue","setState","addToDo","closeDrawer","message","success","bind","placement","closable","onClose","visible","className","padding","placeholder","e","target","onPressEnter","addList","editListItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29b733bf.chunk.js","sourcesContent":["const add = 'add';\r\nconst tuggleIsDone = 'tuggleIsDone';\r\nconst saveToLocalStorage = 'saveToLocalStorage';\r\nconst sortToDoList = 'sortToDoList';\r\nconst deleteItem = 'deleteItem';\r\nconst edit = 'edit';\r\nexport {\r\n    add,\r\n    tuggleIsDone,\r\n    saveToLocalStorage,\r\n    sortToDoList,\r\n    deleteItem,\r\n    edit\r\n}","\r\nfunction formatDate(){\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n    return `${year}年${month}月${day}日`;\r\n}\r\n\r\nexport default  formatDate;","import { add, tuggleIsDone, saveToLocalStorage,sortToDoList,deleteItem ,edit} from '../actionType/index';\r\nimport formatDate from '../plugs/formatDate';\r\n\r\n\r\nfunction addToDo(detail) {\r\n    const date = formatDate();\r\n    return {\r\n        type: add,\r\n        detail: detail,\r\n        createTime: date\r\n    }\r\n}\r\n\r\nfunction tuggle(detail) {\r\n    return {\r\n        type: tuggleIsDone,\r\n        detail: detail\r\n    }\r\n}\r\n\r\nfunction saveToLocal() {\r\n    return {\r\n        type: saveToLocalStorage\r\n    }\r\n}\r\n\r\nfunction sortList(){\r\n    return {\r\n        type:sortToDoList\r\n    }\r\n}\r\n\r\nfunction delItem(detail){\r\n    return {\r\n        type:deleteItem,\r\n        detail\r\n    }\r\n}\r\n\r\nfunction editItem(detail,editDetail){\r\n    return {\r\n        type:edit,\r\n        detail,\r\n        editDetail\r\n    }\r\n}\r\nexport {\r\n    addToDo,\r\n    tuggle,\r\n    saveToLocal,\r\n    sortList,\r\n    delItem,\r\n    editItem\r\n}","import React from 'react';\r\n\r\nimport { List, Switch, Button, Modal, Row, Col } from 'antd';\r\n\r\nimport './ToDoList.css';\r\n\r\nimport { tuggle, saveToLocal, sortList, delItem } from '../action/index';\r\n\r\n\r\nconst { confirm } = Modal;\r\nfunction showConfirm() {\r\n    confirm({\r\n        title: '确定要清空所有事项吗?',\r\n        content: '此操作不可逆',\r\n        cancelText: '取消',\r\n        okText:'确定',\r\n        onOk() {\r\n            localStorage.clear();\r\n            window.location.reload();\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nclass ToDoList extends React.Component {\r\n    render() {\r\n        const store = this.props.store;\r\n        const list = store.getState();\r\n        return <>\r\n            <List\r\n                header={\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <span>事项</span>\r\n                        <Button type=\"danger\" onClick={() => { showConfirm() }}>清空</Button>\r\n                    </div>\r\n                }\r\n                bordered\r\n                dataSource={list}\r\n                renderItem={item =>\r\n                    <List.Item >\r\n                        <Row style={{width:'100%'}}>\r\n                            <Col span={4}>\r\n                                <Switch checkedChildren=\"已完成\" unCheckedChildren=\"未完成\" checked={item.isDone} onChange={() => {\r\n                                    store.dispatch(tuggle(item.detail));\r\n                                    store.dispatch(sortList());\r\n                                    store.dispatch(saveToLocal());\r\n                                    this.forceUpdate();\r\n                                }} />\r\n                            </Col>\r\n\r\n                            <Col span={8}>\r\n                                <span>{item.detail}</span>\r\n                            </Col>\r\n\r\n                            <Col span={8}>\r\n                                <span>创建时间：{item.createTime}</span>\r\n                            </Col>\r\n\r\n                            <Col span={4}>\r\n                                <Button type=\"primary\" onClick={() => this.props.showDrawer(false, item.detail)}>修改</Button>\r\n                                <Button type=\"danger\" onClick={() => {\r\n                                    store.dispatch(delItem(item.detail));\r\n                                    store.dispatch(saveToLocal());\r\n                                    this.forceUpdate();\r\n                                }}>删除</Button>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </List.Item>\r\n                }\r\n            />\r\n        </>\r\n    }\r\n}\r\nexport default ToDoList;","const toDoStore = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [\r\n                ...state,\r\n                {\r\n                    'isDone': false,\r\n                    'createTime': action.createTime,\r\n                    'detail': action.detail\r\n                },\r\n            ]\r\n\r\n        case 'tuggleIsDone':\r\n            return state.map((item) => item.detail === action.detail && (item.isDone = !item.isDone) && item || item)\r\n\r\n        case 'saveToLocalStorage':\r\n            return localStorage.setItem('state', JSON.stringify(state)) || state;\r\n\r\n        case 'deleteItem':\r\n            return state.filter((item) => item.detail !== action.detail);\r\n\r\n        case 'sortToDoList':\r\n            return state.filter((item) => item.isDone === false).concat(state.filter((item) => item.isDone === true));\r\n\r\n        case 'edit':\r\n            // 如果遍历的 todo 列表 item.detail 等于传进来的 detail，则改变为新的 editDetail，且每次都返回 item\r\n            return state.map(item => item.detail === action.detail && (item.detail = action.editDetail) && item || item);\r\n\r\n        default:\r\n            return JSON.parse(localStorage.getItem('state')) || [];\r\n    }\r\n}\r\nexport default toDoStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// 组件\r\nimport ToDoList from './page/ToDoList.jsx';\r\n\r\n// ant design\r\nimport { Button, Drawer, Input, message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\n// 样式\r\nimport './index.css';\r\n\r\n// redux 相关\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport toDoStore from './reducer/reducer';\r\n\r\n// 测试代码开始\r\nimport { addToDo, saveToLocal, sortList, editItem } from './action/index';\r\n\r\nlet store = createStore(toDoStore);\r\n\r\n// const unSubscribe = \r\n// store.subscribe(() => console.log('监听到状态改变:', store.getState()));\r\n\r\n\r\n// 测试代码结束\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return <>\r\n            <div style={{ width: '100%', height: '60px', backgroundColor: '#333' }}>\r\n                <img src='./image/jieni.jpg' style={{ width: '45px', height: '45px', marginTop: '7.5px', marginLeft: '30px' }} alt=\"icon\"></img>\r\n                <span style={{ lineHight: '60px', fontSize: '40px', color: '#fff', verticalAlign: 'top', marginLeft: '40%' }}>ToDoList</span>\r\n                <Button type=\"primary\" onClick={() => this.props.showDrawer(true)} style={{ height: '40px', position: 'fixed', top: '10px', right: '30px' }}>添加事项</Button>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        visiable: false,\r\n        isAdd: true,\r\n        value: '',\r\n        listValue: ''\r\n    }\r\n\r\n    showDrawer(isAdd, detail) {\r\n        this.setState({\r\n            isAdd: isAdd,\r\n            value: detail,\r\n            listValue: detail,\r\n            visiable: true\r\n        })\r\n    }\r\n\r\n    closeDrawer() {\r\n        this.setState({\r\n            visiable: false,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    addList() {\r\n        store.dispatch(addToDo(this.state.value));\r\n        store.dispatch(sortList());\r\n        store.dispatch(saveToLocal());\r\n        this.closeDrawer();\r\n        message.success('添加成功');\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    editListItem() {\r\n        store.dispatch(editItem(this.state.listValue, this.state.value));\r\n        this.closeDrawer();\r\n        message.success('修改成功');\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Header showDrawer={this.showDrawer.bind(this)}></Header>\r\n\r\n            <Drawer title={this.state.isAdd ? '添加事项' : '修改事项'} placement=\"top\" closable={false} onClose={this.closeDrawer.bind(this)} visible={this.state.visiable}>\r\n\r\n                <div className='addEvent' style={{padding:'0 25%'}}>\r\n                    <div>{this.state.isAdd ? '添加事项' : '修改事项'}</div>\r\n                    <Input placeholder=\"请输入事件描述:\"  onChange={(e) => this.setState({ value: e.target.value })} onPressEnter={() => this.addList()} value={this.state.value} />\r\n                </div>\r\n\r\n                <div className='affirm'>\r\n                    <Button type=\"danger\" onClick={this.closeDrawer.bind(this)}>取消</Button>\r\n                    <Button type=\"primary\" onClick={() => { this.state.isAdd ? this.addList() : this.editListItem() }}>确定</Button>\r\n                </div>\r\n\r\n            </Drawer>\r\n\r\n            <ToDoList store={store} showDrawer={this.showDrawer.bind(this)}></ToDoList>\r\n        </>\r\n    }\r\n}\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))\r\n"],"sourceRoot":""}